/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { TypedEventDescription, TypedFunctionDescription } from ".";

interface StdInvariantInterface extends Interface {
  functions: {
    excludeArtifacts: TypedFunctionDescription<{ encode([]: []): string }>;

    excludeContracts: TypedFunctionDescription<{ encode([]: []): string }>;

    excludeSenders: TypedFunctionDescription<{ encode([]: []): string }>;

    targetArtifactSelectors: TypedFunctionDescription<{
      encode([]: []): string;
    }>;

    targetArtifacts: TypedFunctionDescription<{ encode([]: []): string }>;

    targetContracts: TypedFunctionDescription<{ encode([]: []): string }>;

    targetSelectors: TypedFunctionDescription<{ encode([]: []): string }>;

    targetSenders: TypedFunctionDescription<{ encode([]: []): string }>;
  };

  events: {};
}

export class StdInvariant extends Contract {
  connect(signerOrProvider: Signer | Provider | string): StdInvariant;
  attach(addressOrName: string): StdInvariant;
  deployed(): Promise<StdInvariant>;

  on(event: EventFilter | string, listener: Listener): StdInvariant;
  once(event: EventFilter | string, listener: Listener): StdInvariant;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): StdInvariant;
  removeAllListeners(eventName: EventFilter | string): StdInvariant;
  removeListener(eventName: any, listener: Listener): StdInvariant;

  interface: StdInvariantInterface;

  functions: {
    excludeArtifacts(overrides?: UnsignedTransaction): Promise<string[]>;

    "excludeArtifacts()"(overrides?: UnsignedTransaction): Promise<string[]>;

    excludeContracts(overrides?: UnsignedTransaction): Promise<string[]>;

    "excludeContracts()"(overrides?: UnsignedTransaction): Promise<string[]>;

    excludeSenders(overrides?: UnsignedTransaction): Promise<string[]>;

    "excludeSenders()"(overrides?: UnsignedTransaction): Promise<string[]>;

    targetArtifactSelectors(
      overrides?: UnsignedTransaction
    ): Promise<([string, string[]] & { addr: string; selectors: string[] })[]>;

    "targetArtifactSelectors()"(
      overrides?: UnsignedTransaction
    ): Promise<([string, string[]] & { addr: string; selectors: string[] })[]>;

    targetArtifacts(overrides?: UnsignedTransaction): Promise<string[]>;

    "targetArtifacts()"(overrides?: UnsignedTransaction): Promise<string[]>;

    targetContracts(overrides?: UnsignedTransaction): Promise<string[]>;

    "targetContracts()"(overrides?: UnsignedTransaction): Promise<string[]>;

    targetSelectors(
      overrides?: UnsignedTransaction
    ): Promise<([string, string[]] & { addr: string; selectors: string[] })[]>;

    "targetSelectors()"(
      overrides?: UnsignedTransaction
    ): Promise<([string, string[]] & { addr: string; selectors: string[] })[]>;

    targetSenders(overrides?: UnsignedTransaction): Promise<string[]>;

    "targetSenders()"(overrides?: UnsignedTransaction): Promise<string[]>;
  };

  excludeArtifacts(overrides?: UnsignedTransaction): Promise<string[]>;

  "excludeArtifacts()"(overrides?: UnsignedTransaction): Promise<string[]>;

  excludeContracts(overrides?: UnsignedTransaction): Promise<string[]>;

  "excludeContracts()"(overrides?: UnsignedTransaction): Promise<string[]>;

  excludeSenders(overrides?: UnsignedTransaction): Promise<string[]>;

  "excludeSenders()"(overrides?: UnsignedTransaction): Promise<string[]>;

  targetArtifactSelectors(
    overrides?: UnsignedTransaction
  ): Promise<([string, string[]] & { addr: string; selectors: string[] })[]>;

  "targetArtifactSelectors()"(
    overrides?: UnsignedTransaction
  ): Promise<([string, string[]] & { addr: string; selectors: string[] })[]>;

  targetArtifacts(overrides?: UnsignedTransaction): Promise<string[]>;

  "targetArtifacts()"(overrides?: UnsignedTransaction): Promise<string[]>;

  targetContracts(overrides?: UnsignedTransaction): Promise<string[]>;

  "targetContracts()"(overrides?: UnsignedTransaction): Promise<string[]>;

  targetSelectors(
    overrides?: UnsignedTransaction
  ): Promise<([string, string[]] & { addr: string; selectors: string[] })[]>;

  "targetSelectors()"(
    overrides?: UnsignedTransaction
  ): Promise<([string, string[]] & { addr: string; selectors: string[] })[]>;

  targetSenders(overrides?: UnsignedTransaction): Promise<string[]>;

  "targetSenders()"(overrides?: UnsignedTransaction): Promise<string[]>;

  filters: {};

  estimate: {
    excludeArtifacts(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "excludeArtifacts()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    excludeContracts(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "excludeContracts()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    excludeSenders(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "excludeSenders()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    targetArtifactSelectors(
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    "targetArtifactSelectors()"(
      overrides?: UnsignedTransaction
    ): Promise<BigNumber>;

    targetArtifacts(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "targetArtifacts()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    targetContracts(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "targetContracts()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    targetSelectors(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "targetSelectors()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    targetSenders(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "targetSenders()"(overrides?: UnsignedTransaction): Promise<BigNumber>;
  };
}
