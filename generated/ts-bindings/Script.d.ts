/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { TypedEventDescription, TypedFunctionDescription } from ".";

interface ScriptInterface extends Interface {
  functions: {
    IS_SCRIPT: TypedFunctionDescription<{ encode([]: []): string }>;
  };

  events: {};
}

export class Script extends Contract {
  connect(signerOrProvider: Signer | Provider | string): Script;
  attach(addressOrName: string): Script;
  deployed(): Promise<Script>;

  on(event: EventFilter | string, listener: Listener): Script;
  once(event: EventFilter | string, listener: Listener): Script;
  addListener(eventName: EventFilter | string, listener: Listener): Script;
  removeAllListeners(eventName: EventFilter | string): Script;
  removeListener(eventName: any, listener: Listener): Script;

  interface: ScriptInterface;

  functions: {
    IS_SCRIPT(overrides?: UnsignedTransaction): Promise<boolean>;

    "IS_SCRIPT()"(overrides?: UnsignedTransaction): Promise<boolean>;
  };

  IS_SCRIPT(overrides?: UnsignedTransaction): Promise<boolean>;

  "IS_SCRIPT()"(overrides?: UnsignedTransaction): Promise<boolean>;

  filters: {};

  estimate: {
    IS_SCRIPT(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "IS_SCRIPT()"(overrides?: UnsignedTransaction): Promise<BigNumber>;
  };
}
