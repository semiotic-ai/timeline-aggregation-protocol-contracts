/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { ShortStrings } from "../ShortStrings";

export class ShortStrings__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: UnsignedTransaction): Promise<ShortStrings> {
    return super.deploy(overrides) as Promise<ShortStrings>;
  }
  getDeployTransaction(overrides?: UnsignedTransaction): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): ShortStrings {
    return super.attach(address) as ShortStrings;
  }
  connect(signer: Signer): ShortStrings__factory {
    return super.connect(signer) as ShortStrings__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShortStrings {
    return new Contract(address, _abi, signerOrProvider) as ShortStrings;
  }
}

const _abi = [
  {
    type: "error",
    name: "InvalidShortString",
    inputs: [],
  },
  {
    type: "error",
    name: "StringTooLong",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
    ],
  },
];

const _bytecode =
  "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122085a1954486fda253f05e46c46fc5dc6304aac6fbba1398637ebfb27254a8c9b564736f6c63430008120033";
